{"ast":null,"code":"var _jsxFileName = \"/Users/acryu/Desktop/FS-learn/FS-react/react-ts-workshop/src/components/chat/Chatroom.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { useState } from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chatroom(_ref) {\n  _s();\n\n  let {} = _ref;\n  // const [socket, setSocket] = useState<Socket | null>(null);\n  // const [count, setCount] = useState(0);\n  // useEffect(() => {\n  //     const socket: Socket<ServerToClientEvents, ClientToServerEvents>\n  //         = io(\"http://localhost:8080\");\n  //     setSocket(socket);\n  //     socket.on(\"count\", (data: number) => {\n  //         setCount(data);\n  //     });\n  // }, [count]);\n  // const onClick = () => {\n  //     socket?.emit(\"emit\", \"c\");\n  // }\n  const dummy = [{\n    text: \"Hi\",\n    member: \"FutureSkill\"\n  }, {\n    text: \"Hi\",\n    member: \"Mark\"\n  }, {\n    text: \"Good Bye\",\n    member: \"FutureSkill\"\n  }, {\n    text: \"Bye\",\n    member: \"Mark\"\n  }];\n  const [messages, setMessages] = useState(dummy);\n\n  const onMessageSend = message => {\n    setMessages([...messages, message]);\n  };\n\n  const location = useLocation();\n  const text = location.state;\n\n  if (text == null) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n      onMessageSend: onMessageSend,\n      currentMember: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chatroom, \"H7UZ79HgB8TX5881hfGuW4BDz7E=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","MessageForm","MessageList","useLocation","Redirect","Chatroom","dummy","text","member","messages","setMessages","onMessageSend","message","location","state"],"sources":["/Users/acryu/Desktop/FS-learn/FS-react/react-ts-workshop/src/components/chat/Chatroom.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport { useEffect, useState } from 'react'\nimport { io, Socket } from \"socket.io-client\";\nimport { LocationState, MessageData } from '../../models/message.model';\nimport { ClientToServerEvents, ServerToClientEvents } from '../../models/socketIO.model';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\nimport { useLocation, Redirect } from 'react-router-dom'\n\n\ntype Props = {}\n\nfunction Chatroom({ }: Props) {\n    // const [socket, setSocket] = useState<Socket | null>(null);\n    // const [count, setCount] = useState(0);\n\n    // useEffect(() => {\n    //     const socket: Socket<ServerToClientEvents, ClientToServerEvents>\n    //         = io(\"http://localhost:8080\");\n    //     setSocket(socket);\n\n    //     socket.on(\"count\", (data: number) => {\n    //         setCount(data);\n    //     });\n    // }, [count]);\n\n    // const onClick = () => {\n    //     socket?.emit(\"emit\", \"c\");\n    // }\n\n    const dummy = [\n        { text: \"Hi\", member: \"FutureSkill\" },\n        { text: \"Hi\", member: \"Mark\" },\n        { text: \"Good Bye\", member: \"FutureSkill\" },\n        { text: \"Bye\", member: \"Mark\" }\n    ]\n    const [messages, setMessages] = useState(dummy);\n\n    const onMessageSend = (message: MessageData) => {\n        setMessages([...messages, message]);\n    }\n    const location = useLocation()\n    const text = location.state\n\n    if (text == null) {\n        return <Redirect></Redirect>\n    }\n    return (\n        <>\n            <MessageList messages={messages} />\n            <MessageForm onMessageSend={onMessageSend} currentMember={text} />\n        </>\n    )\n}\n\nexport default Chatroom"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,QAApB,QAAoC,OAApC;AAIA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC;;;;AAKA,SAASC,QAAT,OAA8B;EAAA;;EAAA,IAAZ,EAAY;EAC1B;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA,MAAMC,KAAK,GAAG,CACV;IAAEC,IAAI,EAAE,IAAR;IAAcC,MAAM,EAAE;EAAtB,CADU,EAEV;IAAED,IAAI,EAAE,IAAR;IAAcC,MAAM,EAAE;EAAtB,CAFU,EAGV;IAAED,IAAI,EAAE,UAAR;IAAoBC,MAAM,EAAE;EAA5B,CAHU,EAIV;IAAED,IAAI,EAAE,KAAR;IAAeC,MAAM,EAAE;EAAvB,CAJU,CAAd;EAMA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACM,KAAD,CAAxC;;EAEA,MAAMK,aAAa,GAAIC,OAAD,IAA0B;IAC5CF,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,OAAd,CAAD,CAAX;EACH,CAFD;;EAGA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMI,IAAI,GAAGM,QAAQ,CAACC,KAAtB;;EAEA,IAAIP,IAAI,IAAI,IAAZ,EAAkB;IACd,oBAAO,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI;IAAA,wBACI,QAAC,WAAD;MAAa,QAAQ,EAAEE;IAAvB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,WAAD;MAAa,aAAa,EAAEE,aAA5B;MAA2C,aAAa,EAAEJ;IAA1D;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH;;GAzCQF,Q;UA6BYF,W;;;KA7BZE,Q;AA2CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}