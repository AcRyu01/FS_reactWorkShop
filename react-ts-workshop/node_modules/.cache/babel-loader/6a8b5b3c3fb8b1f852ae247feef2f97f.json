{"ast":null,"code":"var _jsxFileName = \"/Users/acryu/Desktop/FS-learn/FS-react/react-ts-workshop/src/components/chat/Chatroom.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatroom(_ref) {\n  _s();\n\n  let {} = _ref;\n  const [socket, setSocket] = useState(null);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const socket = io(\"http://localhost:8080\");\n    setSocket(socket);\n    socket.on(\"count\", data => {\n      setCount(data);\n    });\n  }, [count]);\n\n  const onClick = () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit(\"emit\", \"c\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Chatroom\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chatroom, \"mFKjgTV+nM2F3irZJqIte4vYmp4=\");\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useEffect","useState","io","Chatroom","socket","setSocket","count","setCount","on","data","onClick","emit"],"sources":["/Users/acryu/Desktop/FS-learn/FS-react/react-ts-workshop/src/components/chat/Chatroom.tsx"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { io, Socket } from \"socket.io-client\";\nimport { ClientToServerEvents, ServerToClientEvents } from '../../models/socketIO.model';\n\n\ntype Props = {}\n\nfunction Chatroom({ }: Props) {\n    const [socket, setSocket] = useState<Socket | null>(null);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        const socket: Socket<ServerToClientEvents, ClientToServerEvents>\n            = io(\"http://localhost:8080\");\n        setSocket(socket);\n\n        socket.on(\"count\", (data: number) => {\n            setCount(data);\n        });\n    }, [count]);\n\n    const onClick = () => {\n        socket?.emit(\"emit\", \"c\");\n    }\n\n    return (\n        <div>\n            Chatroom\n            <div>{count}</div>\n            <button onClick={onClick}>count</button>\n        </div>\n    )\n}\n\nexport default Chatroom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,EAAT,QAA2B,kBAA3B;;;AAMA,SAASC,QAAT,OAA8B;EAAA;;EAAA,IAAZ,EAAY;EAC1B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAgB,IAAhB,CAApC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMI,MAA0D,GAC1DF,EAAE,CAAC,uBAAD,CADR;IAEAG,SAAS,CAACD,MAAD,CAAT;IAEAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAoBC,IAAD,IAAkB;MACjCF,QAAQ,CAACE,IAAD,CAAR;IACH,CAFD;EAGH,CARQ,EAQN,CAACH,KAAD,CARM,CAAT;;EAUA,MAAMI,OAAO,GAAG,MAAM;IAClBN,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,IAAR,CAAa,MAAb,EAAqB,GAArB;EACH,CAFD;;EAIA,oBACI;IAAA,oCAEI;MAAA,UAAML;IAAN;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAEI,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GAzBQP,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}